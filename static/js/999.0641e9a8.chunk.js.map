{"version":3,"file":"static/js/999.0641e9a8.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/Posts/ui/Posts.module.scss?c94c","app/core/api/postApi.ts","pages/Posts/ui/containers/CreatePost/CreatePost.tsx","webpack://client/./src/pages/Posts/ui/containers/Post/Post.module.scss?0eab","webpack://client/./src/shared/ui/AppTrash/AppTrash.module.scss?1201","shared/ui/AppTrash/AppTrash.tsx","pages/Posts/ui/containers/Post/Post.tsx","pages/Posts/ui/containers/PostList/PostList.tsx","pages/Posts/ui/hooks/useLikePost.ts","pages/Posts/ui/hooks/useDeletePost.ts","shared/lib/hooks/useInfiniteScroll.ts","shared/lib/hooks/useOnScreen.ts","pages/Posts/ui/Posts.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Posts_container__fKaSN\",\"row\":\"Posts_row__ZN1Oi\",\"col\":\"Posts_col__O3tuq\",\"col-1\":\"Posts_col-1__pQJjt\",\"col-2\":\"Posts_col-2__qHYTd\",\"col-3\":\"Posts_col-3__jAP7F\",\"col-4\":\"Posts_col-4__dddLD\",\"col-5\":\"Posts_col-5__74WnE\",\"col-6\":\"Posts_col-6__qAlIa\",\"col-7\":\"Posts_col-7__an18j\",\"col-8\":\"Posts_col-8__1iz3t\",\"col-9\":\"Posts_col-9__gbuu0\",\"col-10\":\"Posts_col-10__lK9xS\",\"col-11\":\"Posts_col-11__W5YcE\",\"col-12\":\"Posts_col-12__neDSq\",\"col-xs-1\":\"Posts_col-xs-1__e1yU1\",\"col-xs-2\":\"Posts_col-xs-2__wRQ-a\",\"col-xs-3\":\"Posts_col-xs-3__Xm2nm\",\"col-xs-4\":\"Posts_col-xs-4__WVJcv\",\"col-xs-5\":\"Posts_col-xs-5__34SlK\",\"col-xs-6\":\"Posts_col-xs-6__WEPNq\",\"col-xs-7\":\"Posts_col-xs-7__3yVBo\",\"col-xs-8\":\"Posts_col-xs-8__H29PK\",\"col-xs-9\":\"Posts_col-xs-9__JANMt\",\"col-xs-10\":\"Posts_col-xs-10__ykcjD\",\"col-xs-11\":\"Posts_col-xs-11__2uBwK\",\"col-xs-12\":\"Posts_col-xs-12__gubIs\",\"col-sm-1\":\"Posts_col-sm-1__dZoL+\",\"col-sm-2\":\"Posts_col-sm-2__tQk2n\",\"col-sm-3\":\"Posts_col-sm-3__fFfQi\",\"col-sm-4\":\"Posts_col-sm-4__59j4N\",\"col-sm-5\":\"Posts_col-sm-5__t32gc\",\"col-sm-6\":\"Posts_col-sm-6__VFrQT\",\"col-sm-7\":\"Posts_col-sm-7__Ti88E\",\"col-sm-8\":\"Posts_col-sm-8__Bs91f\",\"col-sm-9\":\"Posts_col-sm-9__6iCse\",\"col-sm-10\":\"Posts_col-sm-10__atC40\",\"col-sm-11\":\"Posts_col-sm-11__F2GMa\",\"col-sm-12\":\"Posts_col-sm-12__cLfmN\",\"col-md-1\":\"Posts_col-md-1__KwG0H\",\"col-md-2\":\"Posts_col-md-2__ZGmX6\",\"col-md-3\":\"Posts_col-md-3__NHvfV\",\"col-md-4\":\"Posts_col-md-4__hzikR\",\"col-md-5\":\"Posts_col-md-5__yHC3H\",\"col-md-6\":\"Posts_col-md-6__d2kxY\",\"col-md-7\":\"Posts_col-md-7__D0sBM\",\"col-md-8\":\"Posts_col-md-8__ORorQ\",\"col-md-9\":\"Posts_col-md-9__fCbhP\",\"col-md-10\":\"Posts_col-md-10__Zd3Y9\",\"col-md-11\":\"Posts_col-md-11__VZ8DA\",\"col-md-12\":\"Posts_col-md-12__3la-V\",\"col-lg-1\":\"Posts_col-lg-1__sBQTu\",\"col-lg-2\":\"Posts_col-lg-2__jKl1h\",\"col-lg-3\":\"Posts_col-lg-3__Fdlkj\",\"col-lg-4\":\"Posts_col-lg-4__T5pSx\",\"col-lg-5\":\"Posts_col-lg-5__d0S9A\",\"col-lg-6\":\"Posts_col-lg-6__qQQuK\",\"col-lg-7\":\"Posts_col-lg-7__TLYda\",\"col-lg-8\":\"Posts_col-lg-8__Dxe9w\",\"col-lg-9\":\"Posts_col-lg-9__hEmJ2\",\"col-lg-10\":\"Posts_col-lg-10__ZBizq\",\"col-lg-11\":\"Posts_col-lg-11__MWxqh\",\"col-lg-12\":\"Posts_col-lg-12__wePit\",\"col-xl-1\":\"Posts_col-xl-1__lvc9a\",\"col-xl-2\":\"Posts_col-xl-2__Zb7Rt\",\"col-xl-3\":\"Posts_col-xl-3__XTpE6\",\"col-xl-4\":\"Posts_col-xl-4__+x69S\",\"col-xl-5\":\"Posts_col-xl-5__sapM9\",\"col-xl-6\":\"Posts_col-xl-6__zco2z\",\"col-xl-7\":\"Posts_col-xl-7__KtwOy\",\"col-xl-8\":\"Posts_col-xl-8__jTVoQ\",\"col-xl-9\":\"Posts_col-xl-9__f6akl\",\"col-xl-10\":\"Posts_col-xl-10__LEgHV\",\"col-xl-11\":\"Posts_col-xl-11__V0rvR\",\"col-xl-12\":\"Posts_col-xl-12__Php4p\",\"col-xxs-1\":\"Posts_col-xxs-1__oSUkJ\",\"col-xxs-2\":\"Posts_col-xxs-2__QnUiD\",\"col-xxs-3\":\"Posts_col-xxs-3__5KEpl\",\"col-xxs-4\":\"Posts_col-xxs-4__+z9UX\",\"col-xxs-5\":\"Posts_col-xxs-5__1R5Jx\",\"col-xxs-6\":\"Posts_col-xxs-6__B9Kwh\",\"col-xxs-7\":\"Posts_col-xxs-7__m8wxa\",\"col-xxs-8\":\"Posts_col-xxs-8__2wyh-\",\"col-xxs-9\":\"Posts_col-xxs-9__TfJFg\",\"col-xxs-10\":\"Posts_col-xxs-10__1M8hl\",\"col-xxs-11\":\"Posts_col-xxs-11__k11GX\",\"col-xxs-12\":\"Posts_col-xxs-12__bI3qL\",\"postBlock\":\"Posts_postBlock__TuvF-\",\"postsItems\":\"Posts_postsItems__6kXGQ\",\"postTrashBlock\":\"Posts_postTrashBlock__wmQS2\",\"postCreate\":\"Posts_postCreate__z5tCB\",\"postEditBlock\":\"Posts_postEditBlock__WKy92\"};","import { ICreatePost, IPost, IPostRequestDto, IPostsResponseDto } from './dto/PostDto';\nimport { authApi } from './authApi';\n\nexport const postApi = authApi.injectEndpoints({\n  endpoints: (build) => ({\n    getAllPosts: build.query<IPostsResponseDto, IPostRequestDto | void | null>({\n      query: (params) => ({\n        url: '/posts',\n        params: !!params ? params : {},\n      }),\n      providesTags: ['Posts', 'Users'],\n    }),\n    createPosts: build.mutation<IPost, ICreatePost>({\n      query: (params) => ({\n        url: '/posts',\n        method: 'POST',\n        body: params,\n      }),\n    }),\n    likePost: build.mutation<IPost, { id: string }>({\n      query: ({ id }) => ({\n        url: `/posts/${id}/like`,\n        method: 'PATCH',\n      }),\n      invalidatesTags: (result, error, post) => [{ type: 'Posts', id: post.id }],\n    }),\n    deletePost: build.mutation<{ post: IPost }, { id: string }>({\n      query: ({ id }) => ({\n        url: `/posts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: (result, error, post) => [{ type: 'Posts', id: post.id }],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllPostsQuery,\n  useCreatePostsMutation,\n  useLikePostMutation,\n  useDeletePostMutation,\n} = postApi;\n","import { AppTextarea } from '../../../../../shared/ui/AppTextarea/AppTextarea';\nimport { AppButton } from '../../../../../shared/ui/AppButton/AppButton';\nimport { Flex } from '../../../../../shared/ui/Flex/Flex';\nimport React, { useState } from 'react';\nimport {\n  ToastWrapper,\n  ToastWrapperType,\n} from '../../../../../Common/Components/ToastWrapper/ToastWrapper';\nimport { useCreatePostsMutation } from '../../../../../app/core/api/postApi';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../app/core/redux/store';\nimport { IUser } from '../../../../../app/core/api/dto/UserDto';\nimport { IPost } from '../../../../../app/core/api/dto/PostDto';\n\ninterface CreatePostProps {\n  setCurrentData: React.Dispatch<React.SetStateAction<IPost[]>>;\n}\n\nexport const CreatePost = ({ setCurrentData }: CreatePostProps) => {\n  const user = useSelector<RootState, IUser | null>((state) => state.auth.user);\n  const [postText, setPostText] = useState('');\n\n  const [createPost, { isLoading: isLoadingCreate }] = useCreatePostsMutation();\n\n  const createPostHandler = () => {\n    if (user && postText !== '') {\n      createPost({ author: user.id, postText, publicDate: moment(new Date()).toISOString() }).then(\n        (res) => {\n          const newPost = (res as unknown as { data: { post: IPost } }).data.post;\n          setPostText('');\n          setCurrentData((prevState) => [newPost, ...prevState]);\n          ToastWrapper({\n            msg: 'Пост опубликован'.replace(/\"/g, ''),\n            type: ToastWrapperType.success,\n          });\n        }\n      );\n    }\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"start\" max gap=\"16\">\n      <AppTextarea value={postText} onChange={setPostText} fullWidth rows=\"3\" />\n      <AppButton\n        title=\"Опубликовать\"\n        onClick={createPostHandler}\n        theme=\"full-bg\"\n        disabled={!postText}\n        isLoading={isLoadingCreate}\n      />\n    </Flex>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"postsItem\":\"Post_postsItem__WtXR8\",\"postDateBlock\":\"Post_postDateBlock__dkPvd\",\"email\":\"Post_email__RlJ5t\",\"postLikeBlock\":\"Post_postLikeBlock__pPpJ5\",\"likeActive\":\"Post_likeActive__D9EwX\",\"likeLoading\":\"Post_likeLoading__uCHUm\",\"postsItemContent\":\"Post_postsItemContent__pyt4f\"};","// extracted by mini-css-extract-plugin\nexport default {\"trash\":\"AppTrash_trash__kZGY9\",\"small\":\"AppTrash_small__abggq\",\"medium\":\"AppTrash_medium__Wbl99\",\"big\":\"AppTrash_big__1D8jV\",\"trashModelContent\":\"AppTrash_trashModelContent__dpjKk\"};","import React, { useState } from 'react';\nimport trashIco from '../../../utils/images/trash.png';\nimport cls from './AppTrash.module.scss';\nimport { AppPhoto } from '../AppPhoto/AppPhoto';\nimport { AppModal } from '../AppModal/Modal';\nimport { classNames } from '../../lib/classNames/classNames';\nimport { AppButton } from '../AppButton/AppButton';\nimport { Flex } from '../Flex/Flex';\n\ninterface IAppTrashProps {\n  size?: 'big' | 'medium' | 'small';\n  deleteHandler: (onClose?: () => void) => void;\n  text?: string;\n}\n\nexport const AppTrash = ({ size = 'big', deleteHandler, text }: IAppTrashProps) => {\n  const [active, setActive] = useState<boolean>(false);\n\n  const onOpen = () => setActive(true);\n  const onClose = () => setActive(false);\n  return (\n    <React.Fragment>\n      <AppPhoto\n        src={trashIco}\n        alt=\"корзина\"\n        className={classNames(cls.trash, {}, [cls[size]])}\n        onClick={onOpen}\n      />\n      <AppModal isOpen={active} onClose={onClose} title=\"Предупреждение\" lazy>\n        <Flex direction=\"column\" gap=\"16\" align=\"start\">\n          <div>{text || 'Удалить?'}</div>\n          <Flex justify=\"between\" max>\n            <AppButton onClick={onClose} title=\"нет\" theme=\"full-bg\" />\n            <AppButton\n              onClick={() => {\n                deleteHandler(onClose);\n              }}\n              theme=\"full-bg\"\n              title=\"да\"\n            />\n          </Flex>\n        </Flex>\n      </AppModal>\n    </React.Fragment>\n  );\n};\n","import React, { memo, useState } from 'react';\nimport cls from './Post.module.scss';\nimport moment from 'moment';\nimport { contentToHtml } from '../../../../../utils/helpers';\nimport { AppTrash } from '../../../../../shared/ui/AppTrash/AppTrash';\nimport { IPost } from '../../../../../app/core/api/dto/PostDto';\nimport likePhoto from '../../../../../utils/images/like.png';\nimport { AppAvatar } from '../../../../../shared/ui/AppAvatar/AppAvatar';\nimport { Flex } from '../../../../../shared/ui/Flex/Flex';\nimport { AppText } from '../../../../../shared/ui/AppText/AppText';\nimport { AppPhoto } from '../../../../../shared/ui/AppPhoto/AppPhoto';\nimport { classNames, Mods } from '../../../../../shared/lib/classNames/classNames';\n\ninterface IPostProps {\n  isAdmin: boolean;\n  post: IPost;\n  measureRef?: (node: HTMLElement | null) => void;\n  likeLoading: boolean;\n  likePost: (id: string) => () => void;\n  deleteLoading: boolean;\n  deletePost: (id: string) => (onClose?: () => void) => void;\n}\n\nexport const Post = memo(\n  ({ post, isAdmin, measureRef, likePost, deletePost, likeLoading }: IPostProps) => {\n    const [loadingId, setLoadingId] = useState<null | string>(null);\n    const modsLike: Mods = {\n      [cls.likeActive]: post.isLike,\n    };\n\n    const loadingHandler = () => {\n      setLoadingId(post.id);\n    };\n\n    return (\n      <li className={cls.postsItem} ref={measureRef}>\n        <Flex max justify=\"between\">\n          <Flex gap=\"8\">\n            <AppAvatar src={post.author?.avatar || ''} />\n            <AppText\n              text={post.author.email}\n              color=\"violet\"\n              bold=\"600\"\n              isEllipsis\n              className={cls.email}\n            />\n          </Flex>\n          <Flex gap=\"8\" onClick={loadingHandler}>\n            <div\n              className={classNames(\n                cls.postLikeBlock,\n                { ...modsLike, [cls.likeLoading]: likeLoading && loadingId === post.id },\n                []\n              )}\n              onClick={likePost(post.id)}\n            >\n              <AppPhoto src={likePhoto} alt=\"like\" width={20} height={20} />\n              {post.likeCount}\n            </div>\n            {isAdmin && (\n              <div className={cls.postTrashBlock}>\n                <AppTrash\n                  deleteHandler={deletePost(post.id)}\n                  size={'medium'}\n                  text=\"Вы действительно хотите удалить данный пост?\"\n                />\n              </div>\n            )}\n          </Flex>\n        </Flex>\n        <div className={cls.postDateBlock}>\n          <span>\n            <span>Опубликовано:</span>{' '}\n            {moment(post.publicDate).format('DD-MM-YYYY') || 'Дата не зафикирована'}\n          </span>\n        </div>\n        <div className={cls.postsItemContent}>{contentToHtml(post.postText)}</div>\n      </li>\n    );\n  }\n);\n","import React from 'react';\nimport cls from '../../Posts.module.scss';\nimport { IPost } from '../../../../../app/core/api/dto/PostDto';\nimport { Post } from '../Post/Post';\nimport { useAppSelector } from '../../../../../app/core/redux/store';\nimport { userIsAdmin } from '../../../../../app/core/redux/Reducers/auth/selectors';\nimport { Flex } from '../../../../../shared/ui/Flex/Flex';\nimport { AppSkeleton } from '../../../../../shared/ui/AppSkeleton/AppSkeleton';\nimport { useLikePost } from '../../hooks/useLikePost';\nimport { useDeletePost } from '../../hooks/useDeletePost';\n\nconst AppPostListLoader = () => {\n  return (\n    <Flex align=\"start\" direction=\"column\" gap=\"32\" max>\n      <AppSkeleton width=\"100%\" height=\"130px\" border=\"12px\" />\n      <AppSkeleton width=\"100%\" height=\"130px\" border=\"12px\" />\n      <AppSkeleton width=\"100%\" height=\"130px\" border=\"12px\" />\n      <AppSkeleton width=\"100%\" height=\"130px\" border=\"12px\" />\n    </Flex>\n  );\n};\n\ninterface PostListProps {\n  dataList: IPost[];\n  measureRef: (node: HTMLElement | null) => void;\n  isLoading: boolean;\n  setCurrentData: React.Dispatch<React.SetStateAction<IPost[]>>;\n}\n\nexport const PostList = ({ dataList, measureRef, isLoading, setCurrentData }: PostListProps) => {\n  const isAdmin = useAppSelector(userIsAdmin);\n  const [likePost, isLikeLoadingId] = useLikePost(setCurrentData);\n  const [deletePost, isDeleteLoadingId] = useDeletePost(setCurrentData);\n\n  return (\n    <>\n      <ul className={cls.postsItems}>\n        {dataList.map((post, index, arr) => {\n          const isLastEl = index === arr.length - 1;\n          return (\n            <Post\n              isAdmin={isAdmin}\n              post={post}\n              key={post.id}\n              measureRef={isLastEl ? measureRef : undefined}\n              likeLoading={post.id === isLikeLoadingId}\n              likePost={likePost}\n              deleteLoading={post.id === isDeleteLoadingId}\n              deletePost={deletePost}\n            />\n          );\n        })}\n      </ul>\n      {isLoading && <AppPostListLoader />}\n    </>\n  );\n};\n","import { useLikePostMutation } from '../../../../app/core/api/postApi';\nimport React, { useCallback, useState } from 'react';\nimport { IPost } from '../../../../app/core/api/dto/PostDto';\n\ntype UseLikePostResponse = [(id: string) => () => void, string | null];\n\nexport const useLikePost = (\n  setCurrentData: React.Dispatch<React.SetStateAction<IPost[]>>\n): UseLikePostResponse => {\n  const [likePost] = useLikePostMutation();\n  const [activeId, setActiveId] = useState<string | null>(null);\n\n  const likePostHandler = useCallback(\n    (id: string) => () => {\n      setActiveId(id);\n      likePost({ id })\n        .then((res) => {\n          const newPost = (res as unknown as { data: { post: IPost } })?.data?.post;\n          if (newPost) {\n            setCurrentData((prevState) =>\n              prevState.map((post) => (newPost.id === post.id ? newPost : post))\n            );\n          }\n        })\n        .finally(() => setActiveId(null));\n    },\n    []\n  );\n  return [likePostHandler, activeId];\n};\n","import { useDeletePostMutation } from '../../../../app/core/api/postApi';\nimport {\n  ToastWrapper,\n  ToastWrapperType,\n} from '../../../../Common/Components/ToastWrapper/ToastWrapper';\nimport React, { useCallback, useState } from 'react';\nimport { IPost } from '../../../../app/core/api/dto/PostDto';\n\ntype UseDeletePostResponse = [(id: string) => (onClose?: () => void) => void, string | null];\n\nexport const useDeletePost = (\n  setCurrentData: React.Dispatch<React.SetStateAction<IPost[]>>\n): UseDeletePostResponse => {\n  const [deletePost] = useDeletePostMutation();\n  const [activeId, setActiveId] = useState<string | null>(null);\n\n  const deletePostHandler = useCallback(\n    (id: string) => (onClose?: () => void) => {\n      setActiveId(activeId);\n      deletePost({ id })\n        .then(() => {\n          ToastWrapper({\n            msg: 'Пост успешно удален',\n            type: ToastWrapperType.info,\n          });\n          setCurrentData((prevState) => prevState.filter((post) => post.id !== id));\n          onClose?.();\n        })\n        .finally(() => setActiveId(null));\n    },\n    []\n  );\n\n  return [deletePostHandler, activeId];\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useOnScreen } from './useOnScreen';\nimport { BaseQueryDto, IWithPagination } from '../../../app/core/api/dto/BaseDto';\n\ninterface UseInfiniteScrollProps<Params extends IWithPagination> {\n  getter: (params: Params) => any;\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n}\n\ninterface IInfiniteScrollResults<T> extends BaseQueryDto {\n  results: T[] | [];\n}\ninterface GetterResponse<T> {\n  data?: IInfiniteScrollResults<T>;\n  isLoading: boolean;\n  isFetching: boolean;\n}\n\ninterface UseInfiniteScrollResponse<T> {\n  dataList: T[];\n  measureRef: (node: HTMLElement | null) => void;\n  isLoading: boolean;\n  setCurrentData: React.Dispatch<React.SetStateAction<T[]>>;\n}\n\nexport const useInfiniteScroll = <T extends { id: string }, Params extends IWithPagination>({\n  getter,\n  page,\n  setPage,\n}: UseInfiniteScrollProps<Params>): UseInfiniteScrollResponse<T> => {\n  const [currentData, setCurrentData] = useState<T[]>([]);\n  const { data, isLoading, isFetching } = getter({\n    page,\n    limit: 10,\n  } as Params) as GetterResponse<T>;\n  const { prevPage, nextPage, results } = data || {};\n\n  const { measureRef, isIntersecting, observer } = useOnScreen();\n\n  const loadMore = useCallback(() => {\n    setPage((page) => page + 1);\n  }, []);\n\n  useEffect(() => {\n    if (isIntersecting && nextPage) {\n      loadMore();\n      observer?.disconnect();\n    }\n  }, [isIntersecting, nextPage, loadMore]);\n\n  useEffect(() => {\n    if (results && !prevPage) setCurrentData(results);\n    if (results && !!prevPage) {\n      setCurrentData((prevData) => [...prevData, ...results]);\n    }\n  }, [results, prevPage]);\n\n  return { dataList: currentData, measureRef, isLoading: isLoading || isFetching, setCurrentData };\n};\n","import { useCallback, useState } from 'react';\n\ninterface IntersectionObserverOptions {\n  root?: Element | null;\n  rootMargin?: string;\n  threshold?: number | number[];\n}\n\ninterface UseOnScreenResult {\n  measureRef: (node: HTMLElement | null) => void;\n  isIntersecting: boolean;\n  observer: IntersectionObserver | undefined;\n}\n\nexport const useOnScreen = ({\n  root = null,\n  rootMargin = '0px',\n  threshold = 0,\n}: IntersectionObserverOptions = {}): UseOnScreenResult => {\n  const [observer, setObserver] = useState<IntersectionObserver>();\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  const measureRef = useCallback(\n    (node: HTMLElement | null) => {\n      if (node) {\n        const newObserver = new IntersectionObserver(\n          ([entry]) => {\n            setIntersecting(entry.isIntersecting);\n          },\n          { root, rootMargin, threshold }\n        );\n\n        newObserver.observe(node);\n        setObserver(newObserver);\n      }\n    },\n    [root, rootMargin, threshold]\n  );\n\n  return { measureRef, isIntersecting, observer };\n};\n","import React, { useState } from 'react';\nimport styles from './Posts.module.scss';\nimport { AppTitle } from '../../../shared/ui/AppTitle/AppTitle';\nimport { AppCard } from '../../../shared/ui/AppCard/AppCard';\nimport { CreatePost } from './containers/CreatePost/CreatePost';\nimport { PostList } from './containers/PostList/PostList';\nimport { useInfiniteScroll } from '../../../shared/lib/hooks/useInfiniteScroll';\nimport { IPost } from '../../../app/core/api/dto/PostDto';\nimport { useGetAllPostsQuery } from '../../../app/core/api/postApi';\n\nconst Posts = () => {\n  const [page, setPage] = useState<number>(1);\n  const { dataList, measureRef, isLoading, setCurrentData } = useInfiniteScroll<IPost, {}>({\n    getter: useGetAllPostsQuery,\n    page,\n    setPage,\n  });\n\n  return (\n    <AppCard classNameContent={styles.postBlock} max boxShadow withoutBorder>\n      <AppTitle title=\"Посты\" titleTag=\"h1\" align=\"center\" />\n      <CreatePost setCurrentData={setCurrentData} />\n      <PostList\n        dataList={dataList}\n        setCurrentData={setCurrentData}\n        measureRef={measureRef}\n        isLoading={isLoading}\n      />\n    </AppCard>\n  );\n};\n\nexport default Posts;\n"],"names":["postApi","authApi","endpoints","build","getAllPosts","query","params","url","providesTags","createPosts","mutation","method","body","likePost","id","invalidatesTags","result","error","post","type","deletePost","useGetAllPostsQuery","useCreatePostsMutation","useLikePostMutation","useDeletePostMutation","CreatePost","setCurrentData","user","useSelector","state","auth","useState","postText","setPostText","createPost","isLoadingCreate","isLoading","Flex","direction","align","max","gap","AppTextarea","value","onChange","fullWidth","rows","AppButton","title","onClick","author","publicDate","moment","Date","toISOString","then","res","newPost","data","prevState","ToastWrapper","msg","replace","ToastWrapperType","theme","disabled","AppTrash","size","deleteHandler","text","active","setActive","onClose","AppPhoto","src","trashIco","alt","className","classNames","cls","isOpen","lazy","justify","Post","memo","isAdmin","measureRef","likeLoading","loadingId","setLoadingId","modsLike","isLike","ref","AppAvatar","avatar","AppText","email","color","bold","isEllipsis","likePhoto","width","height","likeCount","format","contentToHtml","AppPostListLoader","AppSkeleton","border","PostList","dataList","useAppSelector","userIsAdmin","activeId","setActiveId","useCallback","map","finally","useLikePost","isLikeLoadingId","filter","useDeletePost","isDeleteLoadingId","index","arr","isLastEl","length","undefined","deleteLoading","useInfiniteScroll","getter","page","setPage","currentData","limit","isFetching","prevPage","nextPage","results","root","rootMargin","threshold","observer","setObserver","isIntersecting","setIntersecting","node","newObserver","IntersectionObserver","entry","observe","useOnScreen","loadMore","useEffect","disconnect","prevData","AppCard","classNameContent","styles","boxShadow","withoutBorder","AppTitle","titleTag"],"sourceRoot":""}