{"version":3,"file":"static/js/928.651d4016.chunk.js","mappings":"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","sources":["pages/Users/ui/components/User.tsx","shared/lib/hooks/useParamsControl.ts","webpack://client/./src/shared/ui/AppPagination/AppPagination.module.css?abbf","shared/ui/AppPagination/AppPagination.tsx","pages/Users/ui/UsersPage.tsx"],"sourcesContent":["import React from 'react';\nimport cls from '../Users.module.scss';\nimport { IUser } from '../../../../app/core/api/dto/UserDto';\nimport { Tooltip } from '../../../../shared/ui/Tooltip/Tooltip';\nimport { AppPhoto } from '../../../../shared/ui/AppPhoto/AppPhoto';\nimport avatarFake from '../../../../shared/assets/images/fake_avatar.png';\nimport { AppCard } from '../../../../shared/ui/AppCard/AppCard';\n\ninterface IUserProps {\n  user: IUser;\n}\n\nexport const User = ({ user }: IUserProps) => {\n  return (\n    <AppCard key={user.id} withoutBorder boxShadow classNameContent={cls.userItem}>\n      <div className={cls.userPhotoBlock}>\n        <AppPhoto src={user.avatar || avatarFake} alt={'avatar'} />\n      </div>\n      <Tooltip content={user.email}>\n        <div className={cls.UserEmailBlock}>{user.email}</div>\n      </Tooltip>\n      <div>Роль: {!!user.role ? user.role : 'Без роли'}</div>\n    </AppCard>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const isPaginationResetReg = /(limit=\\d+&page=\\d+)|[&]/g;\n\ninterface UseParamsControlTypeBase<T, TKey extends keyof T> {\n  paramsList: (TKey | undefined)[];\n}\n\ninterface UseParamsControlTypeWithoutPagination<T, TKey extends keyof T>\n  extends UseParamsControlTypeBase<T, TKey> {\n  withPagination: false;\n  resetPagination?: never;\n  limit?: never;\n}\n\ninterface UseParamsControlTypeWithPagination<T, TKey extends keyof T>\n  extends UseParamsControlTypeBase<T, TKey> {\n  withPagination: true;\n  resetPagination?: boolean;\n  limit?: number;\n}\n\ntype UseParamsControlType<T, TKey extends keyof T> =\n  | UseParamsControlTypeWithoutPagination<T, TKey>\n  | UseParamsControlTypeWithPagination<T, TKey>;\n\nexport const useParamsControl = <T, TKey extends keyof T>({\n  paramsList,\n  withPagination,\n  resetPagination,\n  limit,\n}: UseParamsControlType<T, TKey>) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.toString();\n  const [params, setParams] = useState<null | T>(null);\n\n  const fullParamsList: (TKey | undefined)[] = withPagination\n    ? ['limit' as TKey, 'page' as TKey, ...paramsList]\n    : paramsList;\n\n  const searchParamsWithoutPagination = search.replace(isPaginationResetReg, '');\n\n  useEffect(() => {\n    if (!!resetPagination) {\n      searchParams.set('limit', `${!!limit ? limit : '10'}`);\n      searchParams.set('page', '1');\n      setSearchParams(searchParams.toString());\n    }\n  }, [searchParamsWithoutPagination]);\n\n  useEffect(() => {\n    const newParams = {} as {\n      [key in TKey]?: string | number | boolean;\n    };\n    fullParamsList.forEach((param) => {\n      if (param) {\n        newParams[param] = !!searchParams.get(param as string)\n          ? (searchParams.get(param as string) as string)\n          : undefined;\n      }\n    });\n\n    const newState = Object.entries(newParams).reduce(\n      (newPrams, [param, value]) =>\n        value !== undefined ? { ...newPrams, [param]: value } : newPrams,\n      {}\n    ) as T;\n    setParams(newState);\n  }, [search]);\n\n  return params as T;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"AppPaginationWrap\":\"AppPagination_AppPaginationWrap__NqsAH\",\"PaginationPage\":\"AppPagination_PaginationPage__-gwFC\",\"CurrentPage\":\"AppPagination_CurrentPage__cBs-U\"};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { isPaginationResetReg } from '../../lib/hooks/useParamsControl';\nimport styles from './AppPagination.module.css';\nimport { AppDropdown } from '../AppDropdown/AppDropdown';\n\nfunction createPages(pages: (number | string)[], pagesCount: number, currentPage: number) {\n  if (pagesCount > 4) {\n    if (currentPage > 3) {\n      pages.push(1, '...');\n      for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n        pages.push(i);\n        if (i === pagesCount) break;\n      }\n      if (currentPage + 2 === pagesCount) {\n        pages.push(pagesCount);\n      }\n      if (currentPage + 2 < pagesCount) {\n        pages.push('...', pagesCount);\n      }\n    } else {\n      for (let i = 1; i <= 4; i++) {\n        pages.push(i);\n        if (i === pagesCount) break;\n      }\n      pages.push('...', pagesCount);\n    }\n  } else {\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n  }\n}\n\ninterface IAppPagination {\n  totalCount: number;\n  limit: number;\n  setLimit?: (limit: number) => void;\n}\n\nexport const AppPagination = ({ totalCount, setLimit, limit }: IAppPagination) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n  const [currentPage, setCurrentPage] = useState<number>(!!page ? Number(page) : 1);\n\n  const searchParamsWithoutPagination = searchParams.toString().replace(isPaginationResetReg, '');\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [limit, searchParamsWithoutPagination]);\n\n  const pageCount = Math.ceil(totalCount / limit);\n  const pages: (number | string)[] = [];\n\n  createPages(pages, pageCount, currentPage);\n\n  useEffect(() => {\n    if (currentPage === 1) {\n      searchParams.set('limit', `${limit}`);\n      searchParams.set('page', '1');\n      setSearchParams(searchParams.toString());\n    } else {\n      searchParams.set('limit', `${limit}`);\n      searchParams.set('page', `${currentPage}`);\n      setSearchParams(searchParams.toString());\n    }\n  }, [currentPage, limit]);\n\n  useEffect(() => {\n    if (!!page && Number(page) !== currentPage) {\n      setCurrentPage(Number(page));\n    }\n  }, [page]);\n\n  return (\n    <div>\n      <div className={`${styles.AppPaginationWrap}`}>\n        {pages.map((page, index) => {\n          return (\n            <div\n              key={`pagination-page-${index}`}\n              className={`${styles.PaginationPage} ${\n                currentPage === page ? styles.CurrentPage : ''\n              }`}\n              onClick={typeof page === 'number' ? () => setCurrentPage(page) : undefined}\n            >\n              {page}\n            </div>\n          );\n        })}\n        {setLimit && (\n          <AppDropdown\n            data={[10, 20, 30]}\n            value={limit}\n            onChange={(value) => setLimit(Number(value))}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useGetAllUsersQuery } from '../../../app/core/api/usersApi';\nimport { User } from './components/User';\nimport cls from './Users.module.scss';\nimport '../../../app/App.scss';\nimport { useParamsControl } from '../../../shared/lib/hooks/useParamsControl';\nimport { IUsersRequestDto } from '../../../app/core/api/dto/UserDto';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../app/core/redux/store';\nimport { AppPagination } from '../../../shared/ui/AppPagination/AppPagination';\nimport { AppLoader } from '../../../widgets/AppLoader/AppLoader';\nimport { AppInputFilter } from '../../../features/AppInputFilter/AppInputFilter';\n\nconst UsersPage = () => {\n  const [limit, setLimit] = useState(10);\n  const params = useParamsControl<IUsersRequestDto, keyof IUsersRequestDto>({\n    paramsList: ['search'],\n    withPagination: true,\n    resetPagination: true,\n    limit,\n  });\n\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const {\n    data: users,\n    isLoading: isLoadingList,\n    isFetching: isFetchingList,\n  } = useGetAllUsersQuery(params);\n\n  return (\n    <div>\n      {(isFetchingList || isLoadingList) && <AppLoader />}\n      <div className={''}>\n        <AppInputFilter\n          searchParam=\"search\"\n          placeholder={'Введите email'}\n          label={'Поиск по email'}\n        />\n      </div>\n      <div className={cls.usersList}>\n        {users && currentUser && users.results.map((user) => <User user={user} key={user.id} />)}\n      </div>\n      {users && users.results.length > 0 && (\n        <AppPagination limit={limit} totalCount={!!users ? users.count : 0} setLimit={setLimit} />\n      )}\n    </div>\n  );\n};\n\nexport default UsersPage;\n"],"names":["User","_ref","user","_jsxs","AppCard","withoutBorder","boxShadow","classNameContent","cls","userItem","children","_jsx","className","userPhotoBlock","AppPhoto","src","avatar","avatarFake","alt","Tooltip","content","email","UserEmailBlock","role","id","isPaginationResetReg","AppPagination","totalCount","setLimit","limit","searchParams","setSearchParams","useSearchParams","page","get","currentPage","setCurrentPage","useState","Number","searchParamsWithoutPagination","toString","replace","useEffect","pages","pagesCount","push","i","createPages","Math","ceil","set","concat","styles","map","index","onClick","undefined","AppDropdown","data","value","onChange","UsersPage","params","paramsList","withPagination","resetPagination","search","setParams","fullParamsList","newParams","forEach","param","newState","Object","entries","reduce","newPrams","_ref2","useParamsControl","currentUser","useSelector","state","auth","users","isLoading","isLoadingList","isFetching","isFetchingList","useGetAllUsersQuery","AppLoader","AppInputFilter","searchParam","placeholder","label","usersList","results","length","count"],"sourceRoot":""}