{"version":3,"file":"static/js/780.e7388af4.chunk.js","mappings":"4JAGO,MAAMA,EAAuB,4BCFpC,EAAoC,yCAApC,EAA8F,sCAA9F,EAAkJ,mC,wBCuC3I,MAAMC,EAAgBC,IAA0D,IAAzD,SAAEC,EAAQ,MAAEC,EAAK,WAAEC,EAAa,GAAmBH,EAC/E,MAAOI,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAOH,EAAaI,IAAI,SACvBC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAmBJ,EAAOK,OAAOL,GAAQ,GAEzEM,EAAgCT,EAAaU,WAAWC,QAAQjB,EAAsB,KAE5FkB,EAAAA,EAAAA,YAAU,KACRN,EAAe,EAAE,GAChB,CAACR,EAAOW,IAEX,MACMI,EAA6B,GAsBnC,OApEF,SAAqBA,EAA4BC,EAAoBT,GACnE,GAAIS,EAAa,EACf,GAAIT,EAAc,EAAG,CACnBQ,EAAME,KAAK,EAAG,OACd,IAAK,IAAIC,EAAIX,EAAc,EAAGW,GAAKX,EAAc,IAC/CQ,EAAME,KAAKC,GACPA,IAAMF,GAFwCE,KAIhDX,EAAc,IAAMS,GACtBD,EAAME,KAAKD,GAETT,EAAc,EAAIS,GACpBD,EAAME,KAAK,MAAOD,EAEtB,KAAO,CACL,IAAK,IAAIE,EAAI,EAAGA,GAAK,IACnBH,EAAME,KAAKC,GACPA,IAAMF,GAFYE,KAIxBH,EAAME,KAAK,MAAOD,EACpB,MAEA,IAAK,IAAIE,EAAI,EAAGA,GAAKF,EAAYE,IAC/BH,EAAME,KAAKC,EAGjB,CAsBEC,CAAYJ,EAHMK,KAAKC,KAAKpB,EAAaD,GAGXO,IAE9BO,EAAAA,EAAAA,YAAU,KACY,IAAhBP,GACFL,EAAaoB,IAAI,QAAQ,GAADC,OAAKvB,IAC7BE,EAAaoB,IAAI,OAAQ,KACzBnB,EAAgBD,EAAaU,cAE7BV,EAAaoB,IAAI,QAAQ,GAADC,OAAKvB,IAC7BE,EAAaoB,IAAI,OAAO,GAADC,OAAKhB,IAC5BJ,EAAgBD,EAAaU,YAC/B,GACC,CAACL,EAAaP,KAEjBc,EAAAA,EAAAA,YAAU,KACFT,GAAQK,OAAOL,KAAUE,GAC7BC,EAAeE,OAAOL,GACxB,GACC,CAACA,KAGFmB,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAJ,OAAKK,GAA2BH,SAAA,CAC3CV,EAAMc,KAAI,CAACxB,EAAMyB,KAEdN,EAAAA,EAAAA,KAAA,OAEEG,UAAS,GAAAJ,OAAKK,EAAqB,KAAAL,OACjChB,IAAgBF,EAAOuB,EAAqB,IAE9CG,QAAyB,kBAAT1B,EAAoB,IAAMG,EAAeH,QAAQ2B,EAAUP,SAE1EpB,GAAI,mBAAAkB,OANmBO,MAU7B/B,IACCyB,EAAAA,EAAAA,KAACS,EAAAA,EAAW,CACVC,KAAM,CAAC,GAAI,GAAI,IACfC,MAAOnC,EACPoC,SAAWD,GAAUpC,EAASW,OAAOyB,UAIvC,E,+DCtFH,MAAME,GAAOC,EAAAA,EAAAA,OAAKxC,IAA2B,IAA1B,KAAEyC,GAAkBzC,EAC5C,OACE4B,EAAAA,EAAAA,MAACc,EAAAA,EAAO,CAENC,eAAa,EACbC,WAAS,EACTC,iBAAkBC,EAAAA,EAAIC,SACtBC,UAAS,GAAAvB,OAAKgB,EAAKQ,IAAKtB,SAAA,EAExBD,EAAAA,EAAAA,KAAA,OAAKG,UAAWiB,EAAAA,EAAII,eAAevB,UACjCD,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CACPC,IAAKX,EAAKY,QAAUC,EACpBC,IAAI,SACJC,MAAO,IACPC,OAAQ,IACRC,OAAQ,SAGZhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAO,CAACC,QAASnB,EAAKoB,MAAMlC,UAC3BD,EAAAA,EAAAA,KAAA,OAAKG,UAAWiB,EAAAA,EAAIgB,eAAenC,SAAEc,EAAKoB,WAE5CjC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,6BAASc,EAAKsB,KAAOtB,EAAKsB,KAAO,mDAlBjCtB,EAAKQ,GAmBF,ICzBDe,EAAWhE,IAA+B,IAA9B,MAAEiE,GAAsBjE,EAC/C,OAAU,OAALiE,QAAK,IAALA,GAAAA,EAAOC,QAEVxC,EAAAA,EAAAA,KAAA,OAAKG,UAAWiB,EAAAA,EAAIqB,UAAUxC,SAC3BsC,EAAMlC,KAAKU,IACVf,EAAAA,EAAAA,KAACa,EAAI,CAACE,KAAMA,GAAWA,EAAKQ,SAJPvB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,oIAMxB,E,cCbH,MAAMyC,EAAcA,KAClB1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAc,CAACC,YAAY,SAASC,YAAY,mDAAgBC,MAAM,sDCgChF,EA3BkBC,KAChB,MAAOvE,EAAOD,IAAYU,EAAAA,EAAAA,UAAS,IAC7B+D,ENgBwB1E,KAKM,IALoB,WACxD2E,EAAU,eACVC,EAAc,gBACdC,EAAe,MACf3E,GAC8BF,EAC9B,MAAOI,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCwE,EAAS1E,EAAaU,YACrB4D,EAAQK,IAAapE,EAAAA,EAAAA,UAAmB,MAEzCqE,EAAuCJ,EACzC,CAAC,QAAiB,UAAmBD,GACrCA,EAEE9D,EAAgCiE,EAAO/D,QAAQjB,EAAsB,IA8B3E,OA5BAkB,EAAAA,EAAAA,YAAU,KACF6D,IACJzE,EAAaoB,IAAI,QAAQ,GAADC,OAAOvB,GAAgB,OAC/CE,EAAaoB,IAAI,OAAQ,KACzBnB,EAAgBD,EAAaU,YAC/B,GACC,CAACD,KAEJG,EAAAA,EAAAA,YAAU,KACR,MAAMiE,EAAY,CAAC,EAGnBD,EAAeE,SAASC,IAClBA,IACFF,EAAUE,GAAW/E,EAAaI,IAAI2E,GACjC/E,EAAaI,IAAI2E,QAClBjD,EACN,IAGF,MAAMkD,EAAWC,OAAOC,QAAQL,GAAWM,QACzC,CAACC,EAAQC,KAAA,IAAGN,EAAO9C,GAAMoD,EAAA,YACbvD,IAAVG,EAAsB,IAAKmD,EAAU,CAACL,GAAQ9C,GAAUmD,CAAQ,GAClE,CAAC,GAEHT,EAAUK,EAAS,GAClB,CAACN,IAEGJ,CAAM,EM5DEgB,CAA2D,CACxEf,WAAY,CAAC,UACbC,gBAAgB,EAChBC,iBAAiB,EACjB3E,WAIAkC,KAAM6B,EACN0B,UAAWC,EACXC,WAAYC,IACVC,EAAAA,EAAAA,IAAoBrB,GAExB,OACE9C,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACImE,GAAkBF,KAAkBlE,EAAAA,EAAAA,KAACsE,EAAAA,EAAS,KAChDtE,EAAAA,EAAAA,KAAC0C,EAAW,KACZ1C,EAAAA,EAAAA,KAACsC,EAAQ,CAACC,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOgC,UACvBC,QAAa,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOgC,QAAQ/B,UACtBxC,EAAAA,EAAAA,KAAC3B,EAAa,CAACG,MAAOA,EAAOC,WAAiB,OAAL8D,QAAK,IAALA,OAAK,EAALA,EAAOkC,MAAOlG,SAAUA,MAE/D,C","sources":["shared/lib/hooks/useParamsControl.ts","webpack://client/./src/shared/ui/AppPagination/AppPagination.module.css?abbf","shared/ui/AppPagination/AppPagination.tsx","pages/Users/ui/components/User.tsx","pages/Users/ui/containers/UserList.tsx","pages/Users/ui/containers/UsersFilter.tsx","pages/Users/ui/UsersPage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const isPaginationResetReg = /(limit=\\d+&page=\\d+)|[&]/g;\n\ninterface UseParamsControlTypeBase<T, TKey extends keyof T> {\n  paramsList: (TKey | undefined)[];\n}\n\ninterface UseParamsControlTypeWithoutPagination<T, TKey extends keyof T>\n  extends UseParamsControlTypeBase<T, TKey> {\n  withPagination: false;\n  resetPagination?: never;\n  limit?: never;\n}\n\ninterface UseParamsControlTypeWithPagination<T, TKey extends keyof T>\n  extends UseParamsControlTypeBase<T, TKey> {\n  withPagination: true;\n  resetPagination?: boolean;\n  limit?: number;\n}\n\ntype UseParamsControlType<T, TKey extends keyof T> =\n  | UseParamsControlTypeWithoutPagination<T, TKey>\n  | UseParamsControlTypeWithPagination<T, TKey>;\n\nexport const useParamsControl = <T, TKey extends keyof T>({\n  paramsList,\n  withPagination,\n  resetPagination,\n  limit,\n}: UseParamsControlType<T, TKey>) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.toString();\n  const [params, setParams] = useState<null | T>(null);\n\n  const fullParamsList: (TKey | undefined)[] = withPagination\n    ? ['limit' as TKey, 'page' as TKey, ...paramsList]\n    : paramsList;\n\n  const searchParamsWithoutPagination = search.replace(isPaginationResetReg, '');\n\n  useEffect(() => {\n    if (!!resetPagination) {\n      searchParams.set('limit', `${!!limit ? limit : '10'}`);\n      searchParams.set('page', '1');\n      setSearchParams(searchParams.toString());\n    }\n  }, [searchParamsWithoutPagination]);\n\n  useEffect(() => {\n    const newParams = {} as {\n      [key in TKey]?: string | number | boolean;\n    };\n    fullParamsList.forEach((param) => {\n      if (param) {\n        newParams[param] = !!searchParams.get(param as string)\n          ? (searchParams.get(param as string) as string)\n          : undefined;\n      }\n    });\n\n    const newState = Object.entries(newParams).reduce(\n      (newPrams, [param, value]) =>\n        value !== undefined ? { ...newPrams, [param]: value } : newPrams,\n      {}\n    ) as T;\n    setParams(newState);\n  }, [search]);\n\n  return params as T;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"AppPaginationWrap\":\"AppPagination_AppPaginationWrap__NqsAH\",\"PaginationPage\":\"AppPagination_PaginationPage__-gwFC\",\"CurrentPage\":\"AppPagination_CurrentPage__cBs-U\"};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { isPaginationResetReg } from '../../lib/hooks/useParamsControl';\nimport styles from './AppPagination.module.css';\nimport { AppDropdown } from '../AppDropdown/AppDropdown';\n\nfunction createPages(pages: (number | string)[], pagesCount: number, currentPage: number) {\n  if (pagesCount > 4) {\n    if (currentPage > 3) {\n      pages.push(1, '...');\n      for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n        pages.push(i);\n        if (i === pagesCount) break;\n      }\n      if (currentPage + 2 === pagesCount) {\n        pages.push(pagesCount);\n      }\n      if (currentPage + 2 < pagesCount) {\n        pages.push('...', pagesCount);\n      }\n    } else {\n      for (let i = 1; i <= 4; i++) {\n        pages.push(i);\n        if (i === pagesCount) break;\n      }\n      pages.push('...', pagesCount);\n    }\n  } else {\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n  }\n}\n\ninterface IAppPagination {\n  totalCount?: number;\n  limit: number;\n  setLimit?: (limit: number) => void;\n}\n\nexport const AppPagination = ({ setLimit, limit, totalCount = 0 }: IAppPagination) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n  const [currentPage, setCurrentPage] = useState<number>(!!page ? Number(page) : 1);\n\n  const searchParamsWithoutPagination = searchParams.toString().replace(isPaginationResetReg, '');\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [limit, searchParamsWithoutPagination]);\n\n  const pageCount = Math.ceil(totalCount / limit);\n  const pages: (number | string)[] = [];\n\n  createPages(pages, pageCount, currentPage);\n\n  useEffect(() => {\n    if (currentPage === 1) {\n      searchParams.set('limit', `${limit}`);\n      searchParams.set('page', '1');\n      setSearchParams(searchParams.toString());\n    } else {\n      searchParams.set('limit', `${limit}`);\n      searchParams.set('page', `${currentPage}`);\n      setSearchParams(searchParams.toString());\n    }\n  }, [currentPage, limit]);\n\n  useEffect(() => {\n    if (!!page && Number(page) !== currentPage) {\n      setCurrentPage(Number(page));\n    }\n  }, [page]);\n\n  return (\n    <div>\n      <div className={`${styles.AppPaginationWrap}`}>\n        {pages.map((page, index) => {\n          return (\n            <div\n              key={`pagination-page-${index}`}\n              className={`${styles.PaginationPage} ${\n                currentPage === page ? styles.CurrentPage : ''\n              }`}\n              onClick={typeof page === 'number' ? () => setCurrentPage(page) : undefined}\n            >\n              {page}\n            </div>\n          );\n        })}\n        {setLimit && (\n          <AppDropdown\n            data={[10, 20, 30]}\n            value={limit}\n            onChange={(value) => setLimit(Number(value))}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport cls from '../Users.module.scss';\nimport { IUser } from '../../../../app/core/api/dto/UserDto';\nimport { Tooltip } from '../../../../shared/ui/Tooltip/Tooltip';\nimport { AppPhoto } from '../../../../shared/ui/AppPhoto/AppPhoto';\nimport avatarFake from '../../../../shared/assets/images/fake_avatar.png';\nimport { AppCard } from '../../../../shared/ui/AppCard/AppCard';\n\ninterface IUserProps {\n  user: IUser;\n}\n\nexport const User = memo(({ user }: IUserProps) => {\n  return (\n    <AppCard\n      key={user.id}\n      withoutBorder\n      boxShadow\n      classNameContent={cls.userItem}\n      toContent={`${user.id}`}\n    >\n      <div className={cls.userPhotoBlock}>\n        <AppPhoto\n          src={user.avatar || avatarFake}\n          alt=\"avatar\"\n          width={150}\n          height={150}\n          radius={'8'}\n        />\n      </div>\n      <Tooltip content={user.email}>\n        <div className={cls.UserEmailBlock}>{user.email}</div>\n      </Tooltip>\n      <div>Роль: {!!user.role ? user.role : 'Без роли'}</div>\n    </AppCard>\n  );\n});\n","import React from 'react';\nimport cls from '../Users.module.scss';\nimport { User } from '../components/User';\nimport { IUser } from '../../../../app/core/api/dto/UserDto';\n\ninterface UserListProps {\n  users?: IUser[];\n}\n\nexport const UserList = ({ users }: UserListProps) => {\n  if (!users?.length) return <div>Пользователи не найдены</div>;\n  return (\n    <div className={cls.usersList}>\n      {users.map((user) => (\n        <User user={user} key={user.id} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { AppInputFilter } from '../../../../features/AppInputFilter/AppInputFilter';\n\nexport const UsersFilter = () => {\n  return <AppInputFilter searchParam=\"search\" placeholder=\"Введите email\" label=\"Поиск по email\" />;\n};\n","import React, { useState } from 'react';\nimport { useGetAllUsersQuery } from '../../../app/core/api/usersApi';\nimport { useParamsControl } from '../../../shared/lib/hooks/useParamsControl';\nimport { IUsersRequestDto } from '../../../app/core/api/dto/UserDto';\nimport { AppPagination } from '../../../shared/ui/AppPagination/AppPagination';\nimport { AppLoader } from '../../../widgets/AppLoader/AppLoader';\nimport { UserList } from './containers/UserList';\nimport { UsersFilter } from './containers/UsersFilter';\n\nconst UsersPage = () => {\n  const [limit, setLimit] = useState(12);\n  const params = useParamsControl<IUsersRequestDto, keyof IUsersRequestDto>({\n    paramsList: ['search'],\n    withPagination: true,\n    resetPagination: true,\n    limit,\n  });\n\n  const {\n    data: users,\n    isLoading: isLoadingList,\n    isFetching: isFetchingList,\n  } = useGetAllUsersQuery(params);\n\n  return (\n    <div>\n      {(isFetchingList || isLoadingList) && <AppLoader />}\n      <UsersFilter />\n      <UserList users={users?.results} />\n      {Boolean(users?.results.length) && (\n        <AppPagination limit={limit} totalCount={users?.count} setLimit={setLimit} />\n      )}\n    </div>\n  );\n};\n\nexport default UsersPage;\n"],"names":["isPaginationResetReg","AppPagination","_ref","setLimit","limit","totalCount","searchParams","setSearchParams","useSearchParams","page","get","currentPage","setCurrentPage","useState","Number","searchParamsWithoutPagination","toString","replace","useEffect","pages","pagesCount","push","i","createPages","Math","ceil","set","concat","_jsx","children","_jsxs","className","styles","map","index","onClick","undefined","AppDropdown","data","value","onChange","User","memo","user","AppCard","withoutBorder","boxShadow","classNameContent","cls","userItem","toContent","id","userPhotoBlock","AppPhoto","src","avatar","avatarFake","alt","width","height","radius","Tooltip","content","email","UserEmailBlock","role","UserList","users","length","usersList","UsersFilter","AppInputFilter","searchParam","placeholder","label","UsersPage","params","paramsList","withPagination","resetPagination","search","setParams","fullParamsList","newParams","forEach","param","newState","Object","entries","reduce","newPrams","_ref2","useParamsControl","isLoading","isLoadingList","isFetching","isFetchingList","useGetAllUsersQuery","AppLoader","results","Boolean","count"],"sourceRoot":""}