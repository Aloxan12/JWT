@import "./src/app/styles/mixins";

.testPageWrap {
  height: 100%;
  border: 1px solid var(--color-gray);
  padding: 20px;
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  gap: 20px;

  .animationBlock {
    border: 1px solid var(--color-gray);
    padding: 20px;
    border-radius: 20px;
    background-color: var(--color-gray-light);
    min-height: 92px;

    .whiteCircle {
      width: 50px;
      height: 50px;
      background-color: white;
      border-radius: 50%;
      position: relative;
      left: 0;
      animation-name: white-circle;
      animation-duration: 2s;
      animation-timing-function: linear; // Направление движения
      animation-iteration-count: 1; // Сколько раз повторять, по умолчанию 1
      animation-direction: alternate;
      animation-delay: 0s; // время задержки анимании
      animation-fill-mode: forwards;

      // animation: white-circle 2s linear 1 alternate 2s forwards; // Краткая запись
    }
  }
}

@keyframes white-circle {
  0% {
    left: 0;
  }
  50% {
    border-radius: 0;
  }
  100% {
    left: 500px;
  }
}


// Scroll

.scrollWrap{
  position: relative;
  padding: 12px;
  border-radius: 12px 0 0 12px;
  border: 1px solid;
  max-height: 200px;
  overflow: auto;

  scroll-timeline: --block-scroll block;

  @include scroll;


  .scrollContent{
    height: 400px;
    animation-timeline: --block-scroll;
  }
  .progressingBar{
    position: fixed;
    top: 70px;
    left: 0;
    height: 5px;
    background-color: red;
    width: 5px;
    animation-name: fill-progress;
    animation-timing-function: linear;
    animation-timeline: --block-scroll;
  }
}


@keyframes fill-progress {
  to{
    width: 100%;
  }
}

// transition-behavior

.transitionBehaviorWrap{

  .block{
    transition: 1s;
    transition-behavior: allow-discrete;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    width: 100px;
    height: 100px;
    background-color: var(--color-gray);
    opacity: 1;
    transform: scale(1);

    @starting-style{
      opacity: 0;
      transform: scale(0);
    }
  }
}

// Есть ли скрол

@keyframes detect-scroll {
  from, to { --can-scroll: ; }
}

.isScrollWrap{
  max-height: 50px;
  @include scroll;

  animation: detect-scroll linear;
  animation-timeline: scroll(self);

  --bg-if-can-scroll: var(--can-scroll) lime;
  --bg-if-cant-scroll: red;
  background-color: var(--bg-if-can-scroll, var(--bg-if-cant-scroll));


  --block-if-can-scroll: var(--can-scroll) block;
  --block-if-cant-scroll: var(--can-scroll) none;

  .isScrollContent{
    height: 60px;

    @media (max-width: 1000px) {
      height: 50px;
    }
  }
}


.animateTitle{
  opacity: 1;
  width: 100%;
  border: 1px solid var(--color-gray);
  transition: 1s;
  transition-behavior: allow-discrete;

  @starting-style{
    opacity: 0;
    width: 100%;
    border-width: 0;
    letter-spacing: 8px;
  }
}

// Открыть фото

.lightbox{
  display: none;
  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0, 0.8);
  transition: .5s ease-out;
  opacity: 0;
  transition-behavior: allow-discrete;

  @starting-style{
    display: flex;
    opacity: 1;
  }
}

.lightbox:target {
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 1;
  transition: 1s ease-in;
  transition-behavior: allow-discrete;


  @starting-style{
    opacity: 0;
  }
}

// карточка

.card{
  cursor: pointer;
  width: 150px;
  height: 120px;
  overflow: hidden;
  backface-visibility: hidden;
  position: relative;
  padding: 12px;

  .front, .back{
    position: absolute;
    width: calc(100% - 24px);
    height: calc(100% - 24px);
    overflow: hidden;
    padding: 12px;
    border-radius: 12px;
    transition: transform .6s linear;
    backface-visibility: hidden;
  }

  .front{
    background-color: var(--color-gray-light);
    transform: perspective(200px) rotateY(0deg);
  }
  .back{
    transform: perspective(200px) rotateY(180deg);
    background-color: var(--color-gray);
  }

  &:hover{
    & > .front{
      transform: perspective(200px) rotateY(-180deg);
    }
    & > .back{
      transform: perspective(200px) rotateY(0deg);
    }
  }
}